<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8eb6e377-9c97-4046-a3ce-a914092e3f9e" name="Changes" comment="Api integrate">
      <change afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/sqlDataSources.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/chambres.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/consultations.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/dossiers_medicaux.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/gardes.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/hospitalisations.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/lits.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/materiels.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/paiements.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/patients.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/personnels.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/rendez_vous.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/public/utilisateurs.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/directives/AuthentificationDirective.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Chambre.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Consultation.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/DossierMedical.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Hospitalisation.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Lits.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Materiel.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Paiement.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Patient.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Personnel.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/PersonnelAvecUtilisateur.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/RendezVous.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/Utilisateur.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/models/garde.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/AuthRoute.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/AuthRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/ChambreRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/ConsultationRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/DossierMedicalRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/GardeRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/HospitalisationRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/LitRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/MaterielRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/PaiementRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/PatientRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/PersonnelRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/RendezVousRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/routes/UtilisateurRoutes.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/AuthService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/ChambreService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/ConsultationService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/DossierMedicalService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/GardeServices.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/HospitalisationService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/HttpService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/LitService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/MaterielService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/MedicalCoordinatorService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/PaiementService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/PatientService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/PersonnelService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/RendezVousService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/services/UtilisateurService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/utils/CorsSupport.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/utils/JwtUtils.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sbt.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sbt.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/scala_compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/scala_compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.sbt" beforeDir="false" afterPath="$PROJECT_DIR$/build.sbt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/application.conf" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.conf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/Main.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/Main.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/models/Book.scala" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/routes/BookRoutes.scala" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/services/BookService.scala" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/utils/JsonProtocols.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/utils/JsonProtocols.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Scala Class" />
        <option value="HTTP Request" />
        <option value="Scala Worksheet" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;asela-maduwantha&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:asela-maduwantha/scala_crud.git&quot;,
    &quot;accountId&quot;: &quot;d37e782e-241a-435a-b7df-74bc264c357a&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$USER_HOME$/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.3/config-1.4.3-sources.jar!/com/typesafe/config/ConfigException.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="QODANA_PROBLEMS_VIEW_TAB" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2st8Kw5n58ax33DzIE630nhUHKn" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Chercher une chambre par numéro.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Créer une nouvelle chambre.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Liste des chambres par bloc et étage.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Liste des chambres par statut.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Mettre à jour une chambre.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Récupérer toutes les chambres.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Chambre | Récupérer une chambre par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Créer une nouvelle consultation.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Mettre à jour une consultation.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Rechercher des consultations par diagnostic.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Récupérer les consultations d'un patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Récupérer les consultations d'un personnel médical.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Récupérer toutes les consultations.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Consultation | Récupérer une consultation spécifique.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Hospitalisation | Créer une nouvelle hospitalisation.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Hospitalisation | Mettre à jour une hospitalisation.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Hospitalisation | Récupérer toutes les hospitalisations.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Créer un nouveau lit.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Lire tous les lits.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Lire un lit par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Mettre à jour un lit.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Obtenir les lits d'une chambre spécifique.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Obtenir les lits selon leur statut (ex: Libre, Occupé, Réservé).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Lit | Recherche de lit par numéro.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Materiel | Créer un nouveau matériel.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Materiel | Mettre à jour un matériel.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Materiel | Récupérer tous les matériels.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Materiel | Récupérer un matériel par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Paiement | Créer un paiement.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Paiement | Obtenir les paiements d’un patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Paiement | Obtenir tous les paiements.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Paiement | Obtenir un paiement par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Paiement | 📥 Créer un paiement (sans référence).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #4.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #5.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #6.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #7.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #8.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | #9.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | Créer un nouveau patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | GET all patients.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | Mettre à jour un patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | Récupérer tous les patients.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | Récupérer un patient par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Patient | Test GET patient avec ses dossiers médicaux.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #4.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #5.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #6.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #8.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | #9.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | Créer un Personnel + Utilisateur.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | 📋 Lire tous les personnels.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Personnel | 🧑‍⚕️ Liste des infirmiers.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 1. Créer un rendez-vous.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 2. Récupérer tous les rendez-vous.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 3. Récupérer un rendez-vous par ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 4. Mettre à jour un rendez-vous.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 6. Récupérer les rendez-vous d’un patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 7. Récupérer les rendez-vous d’un personnel.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.Rv | 8. Récupérer les rendez-vous dans une période.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.books | 1. Récupérer tous les livres.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.books | 2. Créer un nouveau livre.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.books | 3. Récupérer un livre par ID (modifie l'ID selon ce que tu veux tester).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.books | 4. Mettre à jour un livre.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.books | 5. Supprimer un livre.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.garde | 1. Créer une garde.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.garde | 2. Récupérer toutes les gardes en cours.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.garde | 3. Récupérer les gardes d’un personnel.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.garde | 4. Récupérer les gardes dans une période donnée.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.garde | Création d'une garde.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #7.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #8.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 1. Gestion des utilisateurs (prérequis pour l'authentification).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 2. Authentification JWT.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 2. Récupérer toutes les gardes en cours.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 3. Routes protégées (patients).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 4. Validation du token.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | 5. Tests avancés.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Ajouter un utilisateur.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Création d'une garde.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Créer un nouveau patient.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Essayer sans token (doit échouer).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Générer un token.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Lister les utilisateurs.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Mettre à jour une consultation.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Requête pour générer un token JWT.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Récupérer les gardes du personnel avec ID 1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Réponse attendue:.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Test de login réussi.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Trouver un utilisateur par email.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Valider un token invalide (doit échouer).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Vérifier un token (remplace ici).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Vérifier un token (remplace le token avec celui généré).executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/LAYE/Downloads/scala_crud/project&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="Book" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Chambre | Mettre à jour une chambre" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/src/main/scala/Chambre.http" index="4" requestIdentifier="Mettre à jour une chambre" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Chambre | Récupérer toutes les chambres" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/src/main/scala/Chambre.http" index="2" requestIdentifier="Récupérer toutes les chambres" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Paiement | 📥 Créer un paiement (sans référence)" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/src/main/scala/Paiement.http" index="6" requestIdentifier="📥 Créer un paiement (sans référence)" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Paiement | Obtenir les paiements d’un patient" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/src/main/scala/Paiement.http" index="4" requestIdentifier="Obtenir les paiements d’un patient" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="HTTP Request.Paiement | 📥 Créer un paiement (sans référence)" />
        <item itemvalue="HTTP Request.Paiement | Obtenir les paiements d’un patient" />
        <item itemvalue="HTTP Request.Chambre | Mettre à jour une chambre" />
        <item itemvalue="HTTP Request.Chambre | Récupérer toutes les chambres" />
      </list>
    </recent_temporary>
  </component>
  <component name="ScalaProjectSettings">
    <option name="migrateConfigurationsNotificationShown" value="true" />
    <option name="scala3DisclaimerShown" value="true" />
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8eb6e377-9c97-4046-a3ce-a914092e3f9e" name="Changes" comment="" />
      <created>1739263452302</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1739263452302</updated>
      <workItem from="1739263453885" duration="231000" />
      <workItem from="1739263695630" duration="5270000" />
      <workItem from="1739320918305" duration="1075000" />
      <workItem from="1743702957967" duration="88000" />
      <workItem from="1743703706631" duration="2325000" />
      <workItem from="1743706276621" duration="733000" />
      <workItem from="1743707062372" duration="772000" />
      <workItem from="1743709086667" duration="8521000" />
      <workItem from="1743937348523" duration="608000" />
      <workItem from="1744009268178" duration="62252000" />
      <workItem from="1744666967953" duration="8638000" />
      <workItem from="1744856416810" duration="11756000" />
      <workItem from="1744903806192" duration="16777000" />
      <workItem from="1744970684398" duration="20052000" />
      <workItem from="1745153406692" duration="625000" />
      <workItem from="1745174593525" duration="66836000" />
      <workItem from="1745400014838" duration="8021000" />
      <workItem from="1745414346281" duration="26301000" />
      <workItem from="1745457793902" duration="10100000" />
      <workItem from="1745480380881" duration="2080000" />
    </task>
    <task id="LOCAL-00001" summary="Api integrate">
      <option name="closed" value="true" />
      <created>1739321080641</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1739321080642</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Api integrate" />
    <option name="LAST_COMMIT_MESSAGE" value="Api integrate" />
  </component>
</project>